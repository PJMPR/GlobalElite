package dao;

import dao.mappers.IMapResultSetIntoEntity;
import dao.repositories.IGameMapRepository;
import dao.uow.IUnitOfWork;
import domain.model.GameMap;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.List;

/**
 * @author L on 05.12.2016.
 */
public class GameMapRepository extends RepositoryBase<GameMap> implements IGameMapRepository {

    private PreparedStatement getName;


    public GameMapRepository(Connection connection, IMapResultSetIntoEntity<GameMap> mapper, IUnitOfWork uow) {
        super(connection, mapper, uow);
        try {
            getName = connection.prepareStatement(getNameSql());
        } catch (SQLException e) {
            e.printStackTrace();
        }

    }

    protected String getNameSql() {
        return "SELECT * FROM MAP where name = ?";
    }

    @Override
    public List<GameMap> maps(String gameMap) {
        return searchByString(gameMap, getName);
    }


    @Override
    protected String insertSql() {
        return "INSERT INTO MAP name values = ?";
    }

    @Override
    protected String updateSql() {
        return "UPDATE MAP SET name = ? where id = ?";
    }

    @Override
    protected void setUpdate(GameMap gameMap) throws SQLException {
        update.setString(1, gameMap.getNameOfMap());
    }

    @Override
    protected void setInsert(GameMap gameMap) throws SQLException {
        insert.setString(1, gameMap.getNameOfMap());
    }

    @Override
    protected String createTableSql() {
        return "CREATE TABLE MAP("
                + "id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,"
                + "name varchar(25)"
                + ")";
    }

    @Override
    protected String tableName() {
        return "MAP";
    }
}
