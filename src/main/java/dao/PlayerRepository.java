package dao;

import dao.mappers.IMapResultSetIntoEntity;
import dao.repositories.IPlayerRepository;
import dao.uow.IUnitOfWork;
import domain.model.Player;

import java.sql.Connection;
import java.sql.Date;
import java.sql.SQLException;
import java.util.List;

/**
 * @author L on 13.11.2016.
 */
public class PlayerRepository extends RepositoryBase<Player> implements IPlayerRepository {

    public PlayerRepository(Connection connection, IMapResultSetIntoEntity<Player> mapper, IUnitOfWork uow) {
        super(connection, mapper, uow);
    }


    @Override
    public List<Player> withNick(String nick) {
        return null;
    }

    @Override
    public List<Player> withCountry(String country) {
        return null;
    }

    @Override
    public List<Player> withDateOfBirth(java.util.Date dob) {
        return null;
    }

    @Override
    protected String insertSql() {
        return "INSERT INTO PLAYER(nick, DoB, country, steamId, PLAYER_STATS_ID) values (?, ?, ?, ?, ?)";
    }

    @Override
    protected String updateSql() {
        return "UPDATE PLAYER SET (nick,DoB, country, steamId, PLAYER_STATS_ID) = (?,?,?,?,?) where id=?";
    }

    @Override
    protected void setUpdate(Player player) throws SQLException {
        update.setString(1, player.getNick());
        update.setString(2, player.getCountry());
        update.setDate(3, (Date) player.getDateOfBirth());
        update.setString(4, player.getSteamId());
        update.setInt(5, player.getGeneralPlayerStats().getId());
    }

    @Override
    protected void setInsert(Player player) throws SQLException {
        insert.setString(1, player.getNick());
        insert.setDate(2, (Date) player.getDateOfBirth());
        insert.setString(3, player.getCountry());
        insert.setString(4, player.getSteamId());
        insert.setObject(5, player.getGeneralPlayerStats());
    }


    @Override
    protected String createTableSql() {
        return "" + "CREATE TABLE PLAYER("
                + "id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,"
                + "nick varchar(25),"
                + "DoB date,"
                + "country varchar(25),"
                + "steamId varchar(25),"
                + "PLAYER_STATS_ID int,"
                + "FOREIGN KEY (PLAYER_STATS_ID) REFERENCES PLAYER_STATS(id)"
                + ")";
    }

    @Override
    protected String tableName() {
        return "PLAYER";
    }
}
