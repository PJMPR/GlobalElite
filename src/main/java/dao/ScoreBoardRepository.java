package dao;

import dao.mappers.IMapResultSetIntoEntity;
import domain.model.ScoreBoard;

import java.sql.Connection;
import java.sql.SQLException;

/**
 * @author L on 13.11.2016.
 */
public class ScoreBoardRepository extends RepositoryBase<ScoreBoard> {


    public ScoreBoardRepository(Connection connection, IMapResultSetIntoEntity<ScoreBoard> mapper) {
        super(connection, mapper);
    }

    @Override
    protected String insertSql() {
        return "INSERT INTO SCOREBOARD(killsInMatch, deathsInMatch, PLAYER_ID) values (?, ?, ?)";
    }

    @Override
    protected String updateSql() {
        return "UPDATE SCOREBOARD SET (killsInMatch, deathInMatch, PLAYER_ID) = (?, ? , ?) where id=?";
    }

    @Override
    protected void setUpdate(ScoreBoard scoreBoard) throws SQLException {
        update.setInt(1, scoreBoard.getKillsInMatch());
        update.setInt(2, scoreBoard.getDeathsInMatch());
        update.setInt(3, scoreBoard.getPlayer().getId());
    }

    @Override
    protected void setInsert(ScoreBoard scoreBoard) throws SQLException {
        insert.setInt(1, scoreBoard.getKillsInMatch());
        insert.setInt(2, scoreBoard.getDeathsInMatch());
        insert.setInt(3, scoreBoard.getPlayer().getId());
    }

    @Override
    protected String createTableSql() {
        return "" + "CREATE TABLE SCOREBOARD("
                + "id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,"
                + "killsInMatch int,"
                + "deathsInMatch int,"
                + "PLAYER_ID int,"
                + "FOREIGN KEY (PLAYER_ID) REFERENCES PLAYER(id)" + ")";
    }

    @Override
    protected String tableName() {
        return "SCOREBOARD";
    }
}
