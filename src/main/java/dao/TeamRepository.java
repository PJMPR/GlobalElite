package dao;

import domain.model.Player;
import domain.model.Team;
import domain.model.TeamStats;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

/**
 * Created by L on 13.11.2016.
 */
public class TeamRepository extends RepositoryBase {


    private String insertSql = "INSERT INTO TEAM(name, country, TEAM_STATS_ID, PLAYERS_ID) values (?, ?, ?, ?)";
    private String selectByIdSql = "SELECT * FROM TEAM WHERE id=?";
    private String deleteSql = "DELETE FROM TEAM WHERE id=?";
    private String getAllSql = "SELECT * FROM TEAM";
    private String updateSql = "UPDATE TEAM SET name = ? where id=?";


    private PreparedStatement insert;
    private PreparedStatement selectById;
    private PreparedStatement delete;
    private PreparedStatement getAll;
    private PreparedStatement update;

    public TeamRepository(Connection connection) {
        super(connection);
        try {
            insert = connection.prepareStatement(insertSql);
            selectById = connection.prepareStatement(selectByIdSql);
            delete = connection.prepareStatement(deleteSql);
            getAll = connection.prepareStatement(getAllSql);
            update = connection.prepareStatement(updateSql);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public void add(Team team) {
        try {
            insert.setString(1, team.getName());
            insert.setString(2, team.getCountry());
            insert.setObject(3, team.getTeamStats());
            insert.setObject(4, team.getPlayers());
            insert.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public Team get(int teamId) {

        try {
            selectById.setInt(1, teamId);
            ResultSet resultSet = selectById.executeQuery();
            while (resultSet.next()) {
                Team result = new Team();
                result.setName(resultSet.getString("name"));
                result.setCountry(resultSet.getString("country"));
                result.setTeamStats((TeamStats) resultSet.getObject("TEAM_STATS_ID"));
                result.setPlayers((Player) resultSet.getObject("PLAYER_ID"));
                return result;
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
        return null;
    }

    public void delete(int teamId) {
        try {
            delete.setInt(1, teamId);
            delete.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }


    public void getAll() {

        try {
            ResultSet resultSet = getAll.executeQuery();
            while (resultSet.next()) {
                int t_id = resultSet.getInt("id");
                String t_n = resultSet.getString("name");
                String t_c = resultSet.getString("country");
                Object t_ts = resultSet.getObject("TEAM_STATS_ID");
                Object t_p = resultSet.getObject("PLAYER_ID");
                System.out.println(t_id + " " + t_n + "" + t_c + ""
                        + t_ts + " " + t_p);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }


    }

    public void setUpdate(Team name, int id) {

        try {

            update.setString(1, name.getName());
            update.setInt(2, id);
            update.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    @Override
    protected String createTableSql() {
        return "" + "CREATE TABLE TEAM("
                + "id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,"
                + "name varchar(25),"
                + "country varchar(25),"
                + "TEAM_STATS_ID int,"
                + "PLAYERS_ID int,"
                + "FOREIGN KEY (TEAM_STATS_ID) REFERENCES TEAM_STATS(id),"
                + "FOREIGN KEY (PLAYERS_ID) REFERENCES PLAYER(id)" + ")";
    }

    @Override
    protected String tableName() {
        return "TEAM";
    }
}
